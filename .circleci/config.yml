version: 2

jobs:
  build:
    docker:
      - image: circleci/node:8.9.4  # Node is used to get version property from package.json object
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: get docker-node version
          command: echo 'export version=$(node -p "($(cat package.json)).version")' >> $BASH_ENV
      - run: mkdir -p ~/project/docker_images
      - run:
          name: build 8.11.3-alpine
          command: |
            cd generated-dockerfiles/alpine/8.11.3-alpine
            docker build -t godaddy/node:8.11.3-alpine-$version .
            docker save -o ~/project/docker_images/8.11.3-alpine-built-image.tar godaddy/node:8.11.3-alpine-$version
      - run:
          name: build 10.5.0-alpine
          command: |
            cd generated-dockerfiles/alpine/10.5.0-alpine
            docker build -t godaddy/node:10.5.0-alpine-$version .
            docker save -o ~/project/docker_images/10.5.0-alpine-built-image.tar godaddy/node:10.5.0-alpine-$version
      - run:
          name: build 8.11.3-debian
          command: |
            cd generated-dockerfiles/debian/8.11.3-debian
            docker build -t godaddy/node:8.11.3-debian-$version .
            docker save -o ~/project/docker_images/8.11.3-debian-built-image.tar godaddy/node:8.11.3-debian-$version
      - run:
          name: build 10.5.0-debian
          command: |
            cd generated-dockerfiles/debian/10.5.0-debian
            docker build -t godaddy/node:10.5.0-debian-$version .
            docker save -o ~/project/docker_images/10.5.0-debian-built-image.tar godaddy/node:10.5.0-debian-$version
      - persist_to_workspace:
          root: docker_images
          paths: ./*

  deploy:
    docker:
      - image: circleci/node:8.9.4  # Node is used to get version property from package.json object
    filters:
      tags:
        only: /v[0-9]+(\.[0-9]+)*/
    steps:
      - checkout
      - setup_remote_docker
      - attach_workspace:
          at: docker_images
      - run:
          name: get docker-node version
          command: echo 'export version=$(node -p "($(cat package.json)).version")' >> $BASH_ENV
      - run:
          name: docker login
          command: docker login -u $DOCKER_USER -p $DOCKER_PASS
      - run:
          name: deploy 8.11.3-alpine
          command: |
            cd generated-dockerfiles/alpine/8.11.3-alpine
            docker load < ~/project/docker_images/8.11.3-alpine-built-image.tar
            docker push godaddy/node:8.11.3-alpine-$version
      - run:
          name: deploy 10.5.0-alpine
          command: |
            cd generated-dockerfiles/alpine/10.5.0-alpine
            docker load < ~/project/docker_images/10.5.0-alpine-built-image.tar
            docker push godaddy/node:10.5.0-alpine-$version
      - run:
          name: deploy 8.11.3-debian
          command: |
            cd generated-dockerfiles/debian/8.11.3-debian
            docker load < ~/project/docker_images/8.11.3-debian-built-image.tar
            docker push godaddy/node:8.11.3-debian-$version
      - run:
          name: deploy 10.5.0-debian
          command: |
            cd generated-dockerfiles/debian/10.5.0-debian
            docker load < ~/project/docker_images/10.5.0-debian-built-image.tar
            docker push godaddy/node:10.5.0-debian-$version

workflows:
  version: 2
  build-deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
