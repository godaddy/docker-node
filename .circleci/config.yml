version: 2

jobs:
  build:
    docker:
      - image: circleci/node:8.9.4  # Only used to get version property from package.json object
    steps:
      - checkout
      - setup_remote_docker
      - run: version=$(node -p "($(cat package.json)).version"); cd generated-dockerfiles/alpine/8.11.3-alpine && mkdir -p docker-cache && docker build -t godaddy/node:8.11.3-alpine-$version .;
      - run: version=$(node -p "($(cat package.json)).version"); cd generated-dockerfiles/alpine/10.5.0-alpine && docker build -t godaddy/node:10.5.0-alpine-$version .;
      - run: version=$(node -p "($(cat package.json)).version"); cd generated-dockerfiles/debian/8.11.3-debian && docker build -t godaddy/node:8.11.3-debian-$version .;
      - run: version=$(node -p "($(cat package.json)).version"); cd generated-dockerfiles/debian/10.5.0-debian && docker build -t godaddy/node:10.5.0-debian-$version .;

  deploy:
    docker:
      - image: circleci/node:8.9.4  # Only used to get version property from package.json object
    filters:
      tags:
        only: /v[0-9]+(\.[0-9]+)*/
    steps:
      - checkout
      - setup_remote_docker
      - run: docker login -u $DOCKER_USER -p $DOCKER_PASS
      - run: version=$(node -p "($(cat package.json)).version"); cd generated-dockerfiles/alpine/8.11.3-alpine && docker push godaddy/node:8.11.3-alpine-$version;
      - run: version=$(node -p "($(cat package.json)).version"); cd generated-dockerfiles/alpine/10.5.0-alpine && docker push godaddy/node:10.5.0-alpine-$version;
      - run: version=$(node -p "($(cat package.json)).version"); cd generated-dockerfiles/debian/8.11.3-debian && docker push godaddy/node:8.11.3-debian-$version;
      - run: version=$(node -p "($(cat package.json)).version"); cd generated-dockerfiles/debian/10.5.0-debian && docker push godaddy/node:10.5.0-debian-$version;

workflows:
  version: 2
  build-deploy:
    jobs:
      - build & deploy
